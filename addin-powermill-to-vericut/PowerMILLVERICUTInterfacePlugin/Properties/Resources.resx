<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="IDS_DirNotEmpty" xml:space="preserve">
    <value>The output directory is not empty. Some files may be overwritten. Do you want to continue?</value>
  </data>
  <data name="IDS_Exception" xml:space="preserve">
    <value>An exception occured. Please contact your system supplier. Exception details:\n{0}</value>
  </data>
  <data name="IDS_ExGetModelWorkplane" xml:space="preserve">
    <value>Error getting model workplane:\n{0}</value>
  </data>
  <data name="IDS_VerifBlockNotSpecified" xml:space="preserve">
    <value>Block isn't specified.</value>
  </data>
  <data name="IDS_VerifBlockSTLNotSpecified" xml:space="preserve">
    <value>At least one block .stl file should be selected.</value>
  </data>
  <data name="IDS_VerifDirDoesntExist" xml:space="preserve">
    <value>The output directory does not exist.</value>
  </data>
  <data name="IDS_VerifDirNotSpecified" xml:space="preserve">
    <value>Output directory path isn't specified.</value>
  </data>
  <data name="IDS_DirNotExist" xml:space="preserve">
    <value>Directory {0} doesn't exist.</value>
  </data>
  <data name="IDS_FileNotExist" xml:space="preserve">
    <value>File {0} doesn't exist.</value>
  </data>
  <data name="IDS_VerifModelSTLNotSpecified" xml:space="preserve">
    <value>Model .stl file path isn't specified.</value>
  </data>
  <data name="IDS_VerifNCProgNotSpecified" xml:space="preserve">
    <value>No NC Programs have been selected.</value>
  </data>
  <data name="IDS_VerifStockModelNotSpecified" xml:space="preserve">
    <value>Stock model name isn't specified.</value>
  </data>
  <data name="IDS_NoStockModel" xml:space="preserve">
    <value>Stock model {0} doesn't exist.</value>
  </data>
  <data name="IDS_NoModel" xml:space="preserve">
    <value>Model {0} doesn't exist.</value>
  </data>
  <data name="IDS_VerifVMIniparNotSpecified" xml:space="preserve">
    <value>Inipar.set file path isn't specified.</value>
  </data>
  <data name="IDS_VerifVMMachineNotSpecified" xml:space="preserve">
    <value>Machine file path isn't specified.</value>
  </data>
  <data name="IDS_VerifVMSettingsNotSpecified" xml:space="preserve">
    <value>Not all VERICUT settings have been set.</value>
  </data>
  <data name="IDS_VCCreateVericutFileFail" xml:space="preserve">
    <value>Error creating the .Vericut file.</value>
  </data>
  <data name="IDS_VCStartAndLoadQuest" xml:space="preserve">
    <value>Do you want to start VERICUT and load project?</value>
  </data>
  <data name="IDS_ExGetNCProgWorkplane" xml:space="preserve">
    <value>Error getting NC Program workplane:\n{0}</value>
  </data>
  <data name="IDS_ExportNCCopyFailed" xml:space="preserve">
    <value>Failed to copy NC Program(s).</value>
  </data>
  <data name="IDS_ExportSolidsFailed" xml:space="preserve">
    <value>Failed to export solids.</value>
  </data>
  <data name="IDS_ExportWorkPlaneFailed" xml:space="preserve">
    <value>Failed to get workplanes info.</value>
  </data>
  <data name="IDS_NCFileDoesntExist" xml:space="preserve">
    <value>File {0} corresponding to NC Program '{1}' doesn't exist.</value>
  </data>
  <data name="IDS_NCProgramDoesntExist" xml:space="preserve">
    <value>NC Program '{0}' doesn't exist.</value>
  </data>
  <data name="IDS_ToolpathDoesntExist" xml:space="preserve">
    <value>Toolpath '{0}' doesn't exist.</value>
  </data>
  <data name="IDS_NCNoProgsSelected" xml:space="preserve">
    <value>No NC Programs were selected for output.</value>
  </data>
  <data name="IDS_NCStatusWrong" xml:space="preserve">
    <value>Status of NC Program '{0}' is '{1}'. Make sure that the program is written and up to date.</value>
  </data>
  <data name="IDS_NCVerify" xml:space="preserve">
    <value>Please verify your NC Program.</value>
  </data>
  <data name="IDS_ToolNoHolder" xml:space="preserve">
    <value>Tool '{0}' doesn't have a holder. Would you like to continue?</value>
  </data>
  <data name="IDS_ToolNoShank" xml:space="preserve">
    <value>Tool '{0}' doesn't have a shank. Would you like to continue?</value>
  </data>
  <data name="IDS_ToolNumberNotSet" xml:space="preserve">
    <value>Tool number for tool '{0}' isn't set, which will cause problems in VERICUT. Would you like to stop export and change the value in Tool properties dialog?</value>
  </data>
  <data name="IDS_ToolNumberNotUnique" xml:space="preserve">
    <value>Tool number for tool '{0}' isn't unique. All tools numbers in exported nc programs must be unique for tools to work properly in VERICUT.</value>
  </data>
  <data name="IDS_VMIniparPathIncorrect" xml:space="preserve">
    <value>Inipar.set file path is incorrect.</value>
  </data>
  <data name="IDS_VMMachinePathIncorrect" xml:space="preserve">
    <value>Machine file path is incorrect.</value>
  </data>
  <data name="IDS_VMMachineReaderNotFound" xml:space="preserve">
    <value>File '{0}' doesn't exist. It's necessary to extract data from VERICUT machine and inipar.set files.</value>
  </data>
  <data name="IDS_VMMachineReaderNotFound1" xml:space="preserve">
    <value>Failed to find VERICUT machine file reader.</value>
  </data>
  <data name="IDS_VCNotFound" xml:space="preserve">
    <value>Failed to find VERICUT.</value>
  </data>
  <data name="IDS_VMTooManyWorkplanes" xml:space="preserve">
    <value>Number of NC Program workplanes exceeded maximum amount allowed. Workplane {0} won't be set in VERICUT project.</value>
  </data>
  <data name="IDS_WorkplaneDoesntExist" xml:space="preserve">
    <value>Workplane '{0}' doesn't exist.</value>
  </data>
  <data name="IDS_WorkplaneFailedToExtract" xml:space="preserve">
    <value>Failed to extract workplane properties.</value>
  </data>
  <data name="IDS_WorkplaneFailedToGet" xml:space="preserve">
    <value>Failed to get workplane properties.</value>
  </data>
  <data name="IDS_WorkplaneModelNotSet" xml:space="preserve">
    <value>Model location workplane isn't set for NC Program '{0}'.</value>
  </data>
  <data name="IDS_ExportErrors" xml:space="preserve">
    <value>Failed to export project.</value>
  </data>
  <data name="IDS_SuccessfullExport" xml:space="preserve">
    <value>Project exported successfully.</value>
  </data>
  <data name="IDS_TemplateSelectDlgTitle" xml:space="preserve">
    <value>Select VERICUT template file</value>
  </data>
  <data name="IDFS_FailMachineFileRead" xml:space="preserve">
    <value>Failed to read the Machine File from the Project file.</value>
  </data>
  <data name="IDS_WorkOffsetExists" xml:space="preserve">
    <value>Work offset you're trying to add is already the list.</value>
  </data>
  <data name="IDS_RemoveDesign" xml:space="preserve">
    <value>The template file may contain a design, would you like to remove it from the output project?</value>
  </data>
  <data name="IDS_RemoveFixture" xml:space="preserve">
    <value>The template file may contain a fixture, would you like to remove it from the output project?</value>
  </data>
  <data name="IDS_RemoveNCCode" xml:space="preserve">
    <value>The template file may include NC programs, would you like to remove these from the output project?</value>
  </data>
  <data name="IDS_RemoveStock" xml:space="preserve">
    <value>The template file may contain a stock, would you like to remove it from the output project?</value>
  </data>
  <data name="IDS_NoProject" xml:space="preserve">
    <value>Project is not available. Please create and save PowerMill project.</value>
  </data>
  <data name="IDS_NoOutputDirectory" xml:space="preserve">
    <value>Output directory not specified.</value>
  </data>
  <data name="IDS_FolderNotCreated" xml:space="preserve">
    <value>Folder '{0}' can't be created.</value>
  </data>
  <data name="IDS_NoVericutTemplate" xml:space="preserve">
    <value>Vericut template not specified.</value>
  </data>
  <data name="IDS_VericutTemplateReadFailure" xml:space="preserve">
    <value>Vericut template '{0}' can't be read.</value>
  </data>
  <data name="IDS_NoSetups" xml:space="preserve">
    <value>No setups specified.</value>
  </data>
  <data name="IDS_SetupName" xml:space="preserve">
    <value>Setup: {0}.</value>
  </data>
  <data name="IDS_NoComponent" xml:space="preserve">
    <value>Component {0} do not exist in the setup {1}.</value>
  </data>
  <data name="IDS_InvalidWorkOffset" xml:space="preserve">
    <value>Setup {0} has invalid work offset {1}.</value>
  </data>
  <data name="IDS_NoTemplateVerification" xml:space="preserve">
    <value>Template file missing. No template component verification will be done. All stored values will be preserved.</value>
  </data>
</root>